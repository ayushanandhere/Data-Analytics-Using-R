Lab Exercise 9: Visualization
You are a data analyst tasked with analyzing and visualizing a dataset. The dataset contains
information about student performance in a course. You need to create a program that
generates various types of plots to help understand and present the data effectively. Write a
program that performs data analysis and generates visualizations for a given dataset.
The program should:
a. Load the necessary libraries (ggplot2).
b. Prepare example data with columns for student names, scores, and attendance percentages.
c. Perform the following tasks:
i. Create a scatter plot to visualize the relationship between scores and attendance
percentages.
ii. Generate a bar plot to show the distribution of scores among different students.
iii. Create a line plot to display the trend of scores over time (assuming different students' scores
were collected at different time intervals).
iv. Generate a histogram to visualize the distribution of scores.
d. Customize the appearance of each plot, such as color, labels, and titles.
e. Arrange the plots in a way that they are easy to compare and understand.
f. Provide appropriate titles for each plot and the axes.
Note: The student data created for visualization should be uniquely created with respect to the
number of students, names , scores, column names by each one of you.
____________________________________________________________________________________________________________________________


# Name - AYUSH ANAND
# USN - 1MS21CI008
# Load necessary libraries
library(ggplot2)
# Create example data
set.seed(123) # Set seed for reproducibility
# Example data with columns for student names, scores, and attendance
percentages
students <- data.frame(
 Name = c("Amit", "Rohan", "Raj", "Deekshit"),
 Scores = c(78, 45, 89, 60),
 Attendance = c(76, 78, 89, 96)
)
# a. Create a scatter plot
scatter_plot <- ggplot(students, aes(x = Attendance, y = Scores)) +
 geom_point(color = "blue", size = 3) +
 labs(title = "Scatter Plot of Scores vs. Attendance",
 x = "Attendance Percentage",
 y = "Scores")
# b. Generate a bar plot
bar_plot <- ggplot(students, aes(x = Name, y = Scores)) +
 geom_bar(stat = "identity", fill = "green") +
 theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
 labs(title = "Bar Plot of Scores by Student",
 x = "Student Names",
 y = "Scores")
# c. Create a line plot
line_plot <- ggplot(students, aes(x = 1:nrow(students), y = Scores)) +
 geom_line(color = "red") +
 labs(title = "Line Plot of Scores Over Time",
 x = "Time",
 y = "Scores")
# d. Generate a histogram
histogram <- ggplot(students, aes(x = Scores, fill = cut(Scores, breaks =
60:100, include.lowest = TRUE))) +
 geom_histogram(binwidth = 5, position = "dodge") +
 labs(title = "Histogram of Scores",
 x = "Scores",
 y = "Frequency")
# e. Arrange the plots
library(gridExtra)
arranged_plots <- grid.arrange(scatter_plot, bar_plot, line_plot,
histogram,
 ncol = 2, top = "Student Performance
Analysis")
# f. Customize appearance
ggsave("student_performance_analysis.png", arranged_plots, width = 14,
height = 10, units = "cm")
